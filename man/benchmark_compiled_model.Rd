% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compiled_engine.R
\name{benchmark_compiled_model}
\alias{benchmark_compiled_model}
\title{Benchmark a chouca model}
\usage{
benchmark_compiled_model(
  mod,
  init,
  niter = 100,
  olevel = c("O2", "O3", "Ofast"),
  unroll_loops = c(TRUE, FALSE),
  control = list(),
  precompute_probas = c(TRUE, FALSE),
  nrepeats = 1
)
}
\arguments{
\item{mod}{A chouca model, as defined by \code{\link{camodel}}}

\item{init}{An initial matrix, as produced by \code{\link{generate_initmat}}}

\item{niter}{The number of iterations to use for the benchmark}

\item{olevel}{The optimizations levels to try (one or several of 'O0', 'O1', 'O2', 'O3', 
'Ofast' or 'default').}

\item{unroll_loops}{The loop unrolling options to try (one or both of TRUE and FALSE)}

\item{control}{Other options to use for the simulations. See the full list of options 
documented in \code{\link{run_camodel}}.}

\item{precompute_probas}{The different values to be taken for precompute_probas (TRUE, 
FALSE, or the vector c(TRUE, FALSE)).}

\item{nrepeats}{The number of samples to take when measuring run time.}
}
\value{
A data.frame whose lines are ordered by model run time with the following columns:
\enumerate{
  \item \code{olevel} The optimization level 
  
  \item \code{unroll_loops} The type of loop unrolling 
  
  \item \code{iter_per_s} The measured number of iteration per second
  
  \item \code{speedup} The speedup of a set of options compared to the slowest result. 
}
}
\description{
Benchmark compilation options for a chouca model
}
\details{
This function will take a chouca model, try the different compilation optimisation
   options of the 'compiled' engine (see \code{\link{run_camodel}}) and measure 
   run times. This allows deciding on which optimization options to use when running 
   simulations.
}
\examples{

mod <- ca_library("forestgap")
inimat <- generate_initmat(mod, c(0.5, 0.5), 1024) 
\dontrun{ 
  benchmark_compiled_model(mod, inimat, niter = 100) 
}

}
